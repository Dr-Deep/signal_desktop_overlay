diff --git a/Gruntfile.js b/Gruntfile.js
index c42bf529..9301356f 100644
--- a/Gruntfile.js
+++ b/Gruntfile.js
@@ -144,6 +144,10 @@ module.exports = grunt => {
         archive: 'mas/Signal.app/Contents/Resources/app.asar',
         exe: `mas/${packageJson.productName}.app/Contents/MacOS/${packageJson.productName}`,
       },
+      freebsd: {
+        archive: 'freebsd-unpacked/resources/app.asar',
+        exe: `freebsd-unpacked/${packageJson.name}`,
+      },
       linux: {
         archive: 'linux-unpacked/resources/app.asar',
         exe: `linux-unpacked/${packageJson.name}`,
diff --git a/main.js b/main.js
index ecafd861..56bebf39 100644
--- a/main.js
+++ b/main.js
@@ -291,6 +291,8 @@ if (OS.isWindows()) {
   windowIcon = path.join(__dirname, 'build', 'icons', 'win', 'icon.ico');
 } else if (OS.isLinux()) {
   windowIcon = path.join(__dirname, 'images', 'signal-logo-desktop-linux.png');
+} else if (OS.isFreeBSD()) {
+  windowIcon = path.join(__dirname, 'images', 'signal-logo-desktop-linux.png');
 } else {
   windowIcon = path.join(__dirname, 'build', 'icons', 'png', '512x512.png');
 }
@@ -1268,7 +1270,7 @@ ipc.on('draw-attention', () => {
     return;
   }
 
-  if (OS.isWindows() || OS.isLinux()) {
+  if (OS.isWindows() || OS.isLinux() || OS.isFreeBSD()) {
     mainWindow.flashFrame(true);
   }
 });
diff --git a/ts/OS.ts b/ts/OS.ts
index 73598af0..9b189ae0 100644
--- a/ts/OS.ts
+++ b/ts/OS.ts
@@ -5,6 +5,7 @@ import is from '@sindresorhus/is';
 import os from 'os';
 import semver from 'semver';
 
+export const isFreeBSD = (): boolean => process.platform === 'freebsd';
 export const isMacOS = (): boolean => process.platform === 'darwin';
 export const isLinux = (): boolean => process.platform === 'linux';
 export const isWindows = (minVersion?: string): boolean => {
diff --git a/ts/models/messages.ts b/ts/models/messages.ts
index 9c54d33f..fa939bf8 100644
--- a/ts/models/messages.ts
+++ b/ts/models/messages.ts
@@ -1458,7 +1458,7 @@ export class MessageModel extends window.Backbone.Model<MessageAttributesType> {
 
     // Linux emoji support is mixed, so we disable it. (Note that this doesn't touch
     //   the `text`, which can contain emoji.)
-    const shouldIncludeEmoji = Boolean(emoji) && !window.Signal.OS.isLinux();
+    const shouldIncludeEmoji = Boolean(emoji) && !(window.Signal.OS.isLinux() || window.Signal.OS.isFreeBSD());
     if (shouldIncludeEmoji) {
       return window.i18n('message--getNotificationText--text-with-emoji', {
         text: modifiedText,
diff --git a/ts/services/notify.ts b/ts/services/notify.ts
index 495b7667..5fbbe73d 100644
--- a/ts/services/notify.ts
+++ b/ts/services/notify.ts
@@ -35,7 +35,7 @@ export function notify({
   const audioNotificationSupport = getAudioNotificationSupport();
 
   const notification = new window.Notification(title, {
-    body: OS.isLinux() ? filter(message) : message,
+    body: (OS.isFreeBSD() || OS.isLinux()) ? filter(message) : message,
     icon,
     silent:
       silent || audioNotificationSupport !== AudioNotificationSupport.Native,
diff --git a/ts/set_os_class.ts b/ts/set_os_class.ts
index 6329bb82..a4396565 100644
--- a/ts/set_os_class.ts
+++ b/ts/set_os_class.ts
@@ -5,6 +5,8 @@ $(document).ready(() => {
   let className: string;
   if (window.Signal.OS.isWindows()) {
     className = 'os-windows';
+  } else if (window.Signal.OS.isFreeBSD()) {
+    className = 'os-freebsd';
   } else if (window.Signal.OS.isMacOS()) {
     className = 'os-macos';
   } else if (window.Signal.OS.isLinux()) {
diff --git a/ts/test-node/types/Settings_test.ts b/ts/test-node/types/Settings_test.ts
index 0b477bea..e554d59e 100644
--- a/ts/test-node/types/Settings_test.ts
+++ b/ts/test-node/types/Settings_test.ts
@@ -52,6 +52,14 @@ describe('Settings', () => {
         Settings.AudioNotificationSupport.Custom
       );
     });
+
+    it('returns custom support on FreeBSD', () => {
+      sandbox.stub(process, 'platform').value('freebsd');
+      assert.strictEqual(
+        Settings.getAudioNotificationSupport(),
+        Settings.AudioNotificationSupport.Custom
+      );
+    });
   });
 
   describe('isAudioNotificationSupported', () => {
@@ -76,6 +84,11 @@ describe('Settings', () => {
       sandbox.stub(process, 'platform').value('linux');
       assert.isTrue(Settings.isAudioNotificationSupported());
     });
+
+    it('returns true on FreeBSD', () => {
+      sandbox.stub(process, 'platform').value('freebsd');
+      assert.isTrue(Settings.isAudioNotificationSupported());
+    });
   });
 
   describe('isNotificationGroupingSupported', () => {
@@ -100,6 +113,11 @@ describe('Settings', () => {
       sandbox.stub(process, 'platform').value('linux');
       assert.isTrue(Settings.isNotificationGroupingSupported());
     });
+
+    it('returns true on FreeBSD', () => {
+      sandbox.stub(process, 'platform').value('freebsd');
+      assert.isTrue(Settings.isNotificationGroupingSupported());
+    });
   });
 
   describe('isHideMenuBarSupported', () => {
@@ -124,6 +142,11 @@ describe('Settings', () => {
       sandbox.stub(process, 'platform').value('linux');
       assert.isTrue(Settings.isHideMenuBarSupported());
     });
+
+    it('returns true on FreeBSD', () => {
+      sandbox.stub(process, 'platform').value('freebsd');
+      assert.isTrue(Settings.isHideMenuBarSupported());
+    });
   });
 
   describe('isDrawAttentionSupported', () => {
@@ -148,5 +171,10 @@ describe('Settings', () => {
       sandbox.stub(process, 'platform').value('linux');
       assert.isTrue(Settings.isDrawAttentionSupported());
     });
+
+    it('returns true on FreeBSD', () => {
+      sandbox.stub(process, 'platform').value('freebsd');
+      assert.isTrue(Settings.isDrawAttentionSupported());
+    });
   });
 });
diff --git a/ts/test-node/util/getUserAgent_test.ts b/ts/test-node/util/getUserAgent_test.ts
index 45527d60..30c898f3 100644
--- a/ts/test-node/util/getUserAgent_test.ts
+++ b/ts/test-node/util/getUserAgent_test.ts
@@ -30,8 +30,13 @@ describe('getUserAgent', () => {
     assert.strictEqual(getUserAgent('1.2.3'), 'Signal-Desktop/1.2.3 Linux');
   });
 
-  it('omits the platform on unsupported platforms', function test() {
+  it('returns the right User-Agent on FreeBSD', function test() {
     this.sandbox.stub(process, 'platform').get(() => 'freebsd');
+    assert.strictEqual(getUserAgent('1.2.3'), 'Signal-Desktop/1.2.3 FreeBSD');
+  });
+
+  it('omits the platform on unsupported platforms', function test() {
+    this.sandbox.stub(process, 'platform').get(() => 'netbsd');
     assert.strictEqual(getUserAgent('1.2.3'), 'Signal-Desktop/1.2.3');
   });
 });
diff --git a/ts/types/Settings.ts b/ts/types/Settings.ts
index e890088b..3286ecb9 100644
--- a/ts/types/Settings.ts
+++ b/ts/types/Settings.ts
@@ -15,7 +15,7 @@ export function getAudioNotificationSupport(): AudioNotificationSupport {
   if (OS.isWindows(MIN_WINDOWS_VERSION) || OS.isMacOS()) {
     return AudioNotificationSupport.Native;
   }
-  if (OS.isLinux()) {
+  if (OS.isFreeBSD || OS.isLinux()) {
     return AudioNotificationSupport.Custom;
   }
   return AudioNotificationSupport.None;
diff --git a/ts/util/getUserAgent.ts b/ts/util/getUserAgent.ts
index 55b4e07d..ff40985f 100644
--- a/ts/util/getUserAgent.ts
+++ b/ts/util/getUserAgent.ts
@@ -5,6 +5,7 @@ import { getOwn } from './getOwn';
 
 const PLATFORM_STRINGS: { [platform: string]: string } = {
   win32: 'Windows',
+  freebsd: 'FreeBSD',
   darwin: 'macOS',
   linux: 'Linux',
 };
